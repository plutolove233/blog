<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - yizhigopher的博客</title><link>http://plutolove233.github.io/posts/</link><description>All Posts | yizhigopher的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>yizhigopher@163.com (yizhigopher)</managingEditor><webMaster>yizhigopher@163.com (yizhigopher)</webMaster><lastBuildDate>Thu, 14 Dec 2023 15:11:01 +0800</lastBuildDate><atom:link href="http://plutolove233.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>如何利用GitHub的Action实现hugo项目自动化部署</title><link>http://plutolove233.github.io/workflow/</link><pubDate>Sun, 12 Nov 2023 15:39:14 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/workflow/</guid><description>为什么要用Action来实现自动化部署hugo项目 不采用自动化部署，每次更新项目时，都需要在本地编译，然后上传整个public目录，比较麻烦</description></item><item><title>强化学习数学知识总结</title><link>http://plutolove233.github.io/concept/</link><pubDate>Fri, 10 Nov 2023 15:24:04 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/concept/</guid><description>基本概念： 对于强化学习，我们一般会分成智能体（agent），环境（通过智能体的状态和动作反馈信息）两大部分，我们现在介绍一些名词，从而有利于</description></item><item><title>pytorch实现线性拟合</title><link>http://plutolove233.github.io/linear/</link><pubDate>Thu, 09 Nov 2023 21:59:54 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/linear/</guid><description>安装pytorch 我们以英伟达显卡为例，我们需要知道自己电脑对应cuda版本信息： 在控制台输入nvidia-smi我们可以看到对应cuda版</description></item><item><title>DQN算法示例：CliffWalking问题</title><link>http://plutolove233.github.io/cliffwalking/</link><pubDate>Fri, 10 Nov 2023 20:48:46 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/cliffwalking/</guid><description>问题描述 给定一个4×12的网格环境，如下图所示，其中黄色区域表示悬崖，我们不能经过，蓝色是我们的目标区域，我们希望能求出每个状态如何利用最少</description></item><item><title>阿里云PAI平台搭建pytorch-cuda11.4环境</title><link>http://plutolove233.github.io/install/</link><pubDate>Thu, 14 Dec 2023 15:11:01 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/install/</guid><description>创建实例 在阿里云平台上创建实例： 其中我们镜像选择为公共的Ubuntu20.04镜像，当然你也可以选择其他配置好的镜像从而简化之后的步骤。 我们</description></item><item><title>go语言小技巧--编译约束</title><link>http://plutolove233.github.io/tips-1/</link><pubDate>Mon, 04 Dec 2023 19:13:11 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/tips-1/</guid><description>简介 我们能在go代码中添加一段注释，用来表示一种编译约束 1 //go:build [tags] 通过这个并且配合go build -tags=&amp;quot;...&amp;quot;的方式，就能实</description></item><item><title>容器运行方式</title><link>http://plutolove233.github.io/docker-run/</link><pubDate>Thu, 30 Nov 2023 14:37:10 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/docker-run/</guid><description>如何运行容器 在之前的几篇文章中，我们学习了如何使用docker的指令以及如何进行容器打包，接下来我们就需要了解，该如何运行容器。 最简单的方式</description></item><item><title>docker常用命令以及镜像打包</title><link>http://plutolove233.github.io/docker-cmd/</link><pubDate>Tue, 14 Nov 2023 21:11:15 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/docker-cmd/</guid><description>基本操作 在上节，我们已经安装好docker，但是就如同写代码一样，我们安装好了相关环境，但是并没有代码能够让我们运行，我们又不会写代码（自己</description></item><item><title>docker介绍以及安装步骤说明</title><link>http://plutolove233.github.io/introduce/</link><pubDate>Tue, 14 Nov 2023 19:45:12 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/introduce/</guid><description>什么是docker docker可以说是一门技术、一种软件，它能够帮助我们将程序进行打包，从而方便后续的项目部署以及维护。 为什么要用docke</description></item><item><title>First_post</title><link>http://plutolove233.github.io/first_post/</link><pubDate>Wed, 08 Nov 2023 18:18:13 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/first_post/</guid><description><![CDATA[这是我的第一份博客，用于测试 1 2 3 4 5 6 7 package main import &#34;fmt&#34; func main(){ fmt.Println(&#34;Hello World&#34;) } $$ \sum_{i=0}^{100}i = 5050 $$]]></description></item></channel></rss>