<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - yizhigopher的博客</title><link>http://plutolove233.github.io/posts/</link><description>All Posts | yizhigopher的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>yizhigopher@163.com (yizhigopher)</managingEditor><webMaster>yizhigopher@163.com (yizhigopher)</webMaster><lastBuildDate>Wed, 30 Oct 2024 10:16:11 +0800</lastBuildDate><atom:link href="http://plutolove233.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>Todotree插件设置</title><link>http://plutolove233.github.io/todotree/</link><pubDate>Mon, 22 Jan 2024 14:48:37 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/todotree/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>Hello Go!</title><link>http://plutolove233.github.io/go-hello/</link><pubDate>Wed, 30 Oct 2024 10:16:11 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/go-hello/</guid><description>在完成了上个章节的Go编译器安装后，本章节将介绍Go的基础语法，并通过几个例子进行展示。 Hello World 学习每个语言的第一步永远是学会如何在控制台打印😊</description></item><item><title>如何实现多个个容器之间的通讯</title><link>http://plutolove233.github.io/docker-connection/</link><pubDate>Tue, 29 Oct 2024 19:44:43 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/docker-connection/</guid><description>为了进行多个容器之间通讯的实验，首先我们需要创建两个服务，分别打包成不同的镜像，并通过docker-compose进行容器编排。本次实验的项</description></item><item><title>Go语言环境安装</title><link>http://plutolove233.github.io/go-install/</link><pubDate>Tue, 08 Oct 2024 15:47:15 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/go-install/</guid><description>在本节中，我们将首先简单介绍下如何安装Go语言环境，以开启Go语言学习之路！我们将简单介绍在Windows环境，Linux环境以及Mac环境</description></item><item><title>Normalizing Flow介绍</title><link>http://plutolove233.github.io/nf-introduce/</link><pubDate>Sat, 06 Jan 2024 14:08:15 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/nf-introduce/</guid><description>归一化流基本内容 什么是标准化流：基于一系列可逆变换，生成样本对应的分布 标准化流的基本原理： 变量替换：$p_x(x)=p_z(f_\theta</description></item><item><title>阿里云PAI平台搭建pytorch-cuda11.4环境</title><link>http://plutolove233.github.io/install/</link><pubDate>Thu, 14 Dec 2023 15:11:01 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/install/</guid><description>创建实例 在阿里云平台上创建实例： 其中我们镜像选择为公共的Ubuntu20.04镜像，当然你也可以选择其他配置好的镜像从而简化之后的步骤。 我们</description></item><item><title>go语言小技巧--编译约束</title><link>http://plutolove233.github.io/tips-1/</link><pubDate>Mon, 04 Dec 2023 19:13:11 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/tips-1/</guid><description>简介 我们能在go代码中添加一段注释，用来表示一种编译约束 1 //go:build [tags] 通过这个并且配合go build -tags=&amp;quot;...&amp;quot;的方式，就能实</description></item><item><title>容器运行方式</title><link>http://plutolove233.github.io/docker-run/</link><pubDate>Thu, 30 Nov 2023 14:37:10 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/docker-run/</guid><description>如何运行容器 在之前的几篇文章中，我们学习了如何使用docker的指令以及如何进行容器打包，接下来我们就需要了解，该如何运行容器。 最简单的方式</description></item><item><title>docker常用命令以及镜像打包</title><link>http://plutolove233.github.io/docker-cmd/</link><pubDate>Tue, 14 Nov 2023 21:11:15 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/docker-cmd/</guid><description>基本操作 在上节，我们已经安装好docker，但是就如同写代码一样，我们安装好了相关环境，但是并没有代码能够让我们运行，我们又不会写代码（自己</description></item><item><title>docker介绍以及安装步骤说明</title><link>http://plutolove233.github.io/docker-introduce/</link><pubDate>Tue, 14 Nov 2023 19:45:12 +0800</pubDate><author>yizhigopher</author><guid>http://plutolove233.github.io/docker-introduce/</guid><description>什么是docker docker可以说是一门技术、一种软件，它能够帮助我们将程序进行打包，从而方便后续的项目部署以及维护。 为什么要用docke</description></item></channel></rss>