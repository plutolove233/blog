<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>golang - Tag - 二十二画生的博客</title><link>http://plutolove233.github.io/tags/golang/</link><description>golang - Tag - 二十二画生的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>yizhigopher@163.com (二十二画生)</managingEditor><webMaster>yizhigopher@163.com (二十二画生)</webMaster><lastBuildDate>Sat, 04 Jan 2025 14:17:12 +0800</lastBuildDate><atom:link href="http://plutolove233.github.io/tags/golang/" rel="self" type="application/rss+xml"/><item><title>Go并发</title><link>http://plutolove233.github.io/go-goroutine/</link><pubDate>Sat, 04 Jan 2025 14:17:12 +0800</pubDate><author>二十二画生</author><guid>http://plutolove233.github.io/go-goroutine/</guid><description>前置知识 串行：指按照一定的顺序完成一组任务。例如会先清洗食材、再对食材切块备份、最后再进行烹饪 并发：指同一时间段内，执行多个任务。比如：可以</description></item><item><title>Go Error</title><link>http://plutolove233.github.io/go-error/</link><pubDate>Fri, 03 Jan 2025 19:50:55 +0800</pubDate><author>二十二画生</author><guid>http://plutolove233.github.io/go-error/</guid><description>Go error接口和错误处理 error接口与错误处理 go与java不同的是，并不会采用try-catch方式来处理代码中出现的错误，而是通过i</description></item><item><title>Go接口</title><link>http://plutolove233.github.io/go-interface/</link><pubDate>Mon, 30 Dec 2024 17:01:41 +0800</pubDate><author>二十二画生</author><guid>http://plutolove233.github.io/go-interface/</guid><description>接口 接口类型定义 接口是程序员定义的一种类型，定义中包含了一组方法，用于规定需要实现哪些方法，示例代码如下： 1 2 3 4 5 type Animaler interface { Calls() string Name() string Resp(string) string } 上</description></item><item><title>vscode Go环境设置</title><link>http://plutolove233.github.io/go/</link><pubDate>Sun, 10 Nov 2024 20:11:24 +0800</pubDate><author>二十二画生</author><guid>http://plutolove233.github.io/go/</guid><description>首先你需要按照这个教程 安装好Go环境。 之后在vscode插件商城中，搜寻Go，选择第一个进行安装。 安装好插件后，按下Ctrl+Shift+P</description></item><item><title>Go指针、函数、结构体、接口以及方法</title><link>http://plutolove233.github.io/go-basic2/</link><pubDate>Fri, 08 Nov 2024 22:39:44 +0800</pubDate><author>二十二画生</author><guid>http://plutolove233.github.io/go-basic2/</guid><description>指针 和C语言一样，Go中也存在指针，一般采用如下方式来获取变量的地址： 1 2 a := 12 var ptr *int = &amp;amp;a 如果我们想要获取该指针变量指向地址对应的内容时，我</description></item><item><title>Go基本运算符、流程控制、数组与切片以及字典</title><link>http://plutolove233.github.io/go-basic/</link><pubDate>Fri, 08 Nov 2024 15:24:06 +0800</pubDate><author>二十二画生</author><guid>http://plutolove233.github.io/go-basic/</guid><description>上一章节我们已经简单介绍了一个最简单的go程序以及关于变量以及常量的定义。本章节将会继续极少go的基础知识。 基本运算符 go的基础运算符包含 数</description></item><item><title>Hello Go!</title><link>http://plutolove233.github.io/go-hello/</link><pubDate>Wed, 30 Oct 2024 10:16:11 +0800</pubDate><author>二十二画生</author><guid>http://plutolove233.github.io/go-hello/</guid><description>在完成了上个章节的Go编译器安装后，本章节将介绍Go的基础语法，并通过几个例子进行展示。 Hello World 学习每个语言的第一步永远是学会如何在控制台打印😊</description></item><item><title>Go语言环境安装</title><link>http://plutolove233.github.io/go-install/</link><pubDate>Tue, 08 Oct 2024 15:47:15 +0800</pubDate><author>二十二画生</author><guid>http://plutolove233.github.io/go-install/</guid><description>在本节中，我们将首先简单介绍下如何安装Go语言环境，以开启Go语言学习之路！我们将简单介绍在Windows环境，Linux环境以及Mac环境</description></item><item><title>go语言小技巧--编译约束</title><link>http://plutolove233.github.io/tips-1/</link><pubDate>Mon, 04 Dec 2023 19:13:11 +0800</pubDate><author>二十二画生</author><guid>http://plutolove233.github.io/tips-1/</guid><description>简介 我们能在go代码中添加一段注释，用来表示一种编译约束 1 //go:build [tags] 通过这个并且配合go build -tags=&amp;quot;...&amp;quot;的方式，就能实</description></item></channel></rss>